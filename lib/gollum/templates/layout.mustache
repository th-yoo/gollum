<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-type" content="text/html;charset=utf-8">
  <meta name="MobileOptimized" content="width">
  <meta name="HandheldFriendly" content="true">
  <meta name="viewport" content="width=device-width">
  {{#sprockets_stylesheet_tag}}app{{/sprockets_stylesheet_tag}}
  {{#sprockets_stylesheet_tag}}print print{{/sprockets_stylesheet_tag}}


  {{#css}}<link rel="stylesheet" type="text/css" href="{{custom_css}}" media="all">{{/css}}
  {{#noindex}}<meta name="robots" content="noindex, nofollow" />{{/noindex}}

  <script>
  var criticMarkup = '{{critic_markup}}';
	var baseUrl = '{{base_url}}';
  var showLocalTime = {{{show_local_time}}};
	var uploadDest = 'uploads';
	var perPageUploads = '{{per_page_uploads}}';
	if (perPageUploads == 'true') {
	  uploadDest = uploadDest + window.location.pathname.replace(/.*gollum\/[-\w]+\//, "/").replace(/\.[^/.]+$/, "").replace(baseUrl, "")
	}
	{{#page}}
	  var pageFullPath = '{{escaped_url_path}}';
    var pageFormat   = '{{format}}';
	{{/page}}
  {{#has_search_terms}}
    var searchTerms  = [{{#search_terms}}'{{.}}', {{/search_terms}}
    ];
  {{/has_search_terms}}
  {{#is_create_page}}
    var default_markup = '{{default_markup}}';
  {{/is_create_page}}
  {{#has_editor}}
     var default_keybinding = '{{default_keybinding}}';
  {{/has_editor}}

  </script>
  {{#sprockets_javascript_tag}}app{{/sprockets_javascript_tag}}
  {{#has_editor}}
  {{#sprockets_javascript_tag}}editor{{/sprockets_javascript_tag}}
  {{/has_editor}}
  
  {{#mathjax}}
  <script type="text/javascript">
    window.MathJax = {
      tex2jax: {
        inlineMath:  [ ['$','$'], ['\\(','\\)'] ],
        displayMath: [ ['$$','$$'], ['\\[','\\]'] ],
        processEscapes: true
      },
      TeX: { extensions: ["autoload-all.js"] }
    };
  </script>
  {{#mathjax_config}}
  <script type="text/javascript" src="{{mathjax_config_path}}"></script>
  {{/mathjax_config}}
  <script defer src="{{mathjax_js}}"></script>
  {{/mathjax}}
  
  {{#mermaid}}
  <script>
  var mermaid_conf = {
    startOnLoad: true,
    securityLevel: 'strict'
  };
  </script>
  {{/mermaid}}
  
  {{#js}}<script type="text/javascript" src="{{custom_js}}"></script>{{/js}}

  {{#mermaid}}
  {{#sprockets_javascript_tag}}mermaid{{/sprockets_javascript_tag}}
  <script>
    mermaid.initialize(mermaid_conf);
  </script>
  {{/mermaid}}

<script>
const html = (strings, ...values) => String.raw({raw:strings}, ...values);
class uml_diagram_t extends HTMLElement {
	constructor()
	{
		super();
		this.attachShadow({mode: 'open'});
		this.shadowRoot.innerHTML = html`<p>Loading...</p>`;

		this._src = this.getAttribute('src');
		this.onSrc();
	}
	get src() { return this._src; }

	async onSrc()
	{
		if (!this.src) return;

		const resp = await fetch(this.src);
		this.shadowRoot.innerHTML = await resp.text();
	}

	attributeChangedCallback(name, oldValue, newValue)
	{
		if (name !== 'src') return;
		if (oldValue === newValue) return;
		this._src = newValue;

		this.onSrc();
	}
	static get observedAttributes() { return ['src']; }
}

window.customElements.define('uml-diagram', uml_diagram_t);

</script>
  
  <title>{{title}}</title>
</head>
<body>
<div class="container-lg clearfix">
{{{yield}}}
{{< user}}
</div>
</body>
</html>
